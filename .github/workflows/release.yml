name: Make Release
on: [workflow_dispatch]
jobs:
  build:

    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - uses: actions/cache@v2
      id: cacheStep
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Restore dependencies
      run: dotnet restore
    - name: Setup NuGet.exe for use with actions
      uses: NuGet/setup-nuget@v1.0.5
    - name: Restore NuGet
      if: steps.cacheStep.outputs.cache-hit != 'true'
      run: nuget restore Octane.sln
    - name: Build
      run: dotnet build --no-restore
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./OctaneEngine/bin/Debug/net6.0/OctaneEngine.dll
        asset_name: OctaneEngine.dll
        asset_content_type: application/dll
  
